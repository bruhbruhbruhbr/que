do
    local TeleportService = game:GetService("TeleportService")
    local Players = game:GetService("Players")
    local UIS = game:GetService("UserInputService")

    UIS.InputBegan:Connect(function(input, gpe)
        if gpe then return end
        if input.KeyCode == Enum.KeyCode.L then
            print("Rejoining same server...")
            local player = Players.LocalPlayer
            local placeId = game.PlaceId
            local jobId = game.JobId
            task.wait(0.2)
            TeleportService:TeleportToPlaceInstance(placeId, jobId, player)
        end
    end)
end

local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")

local enabled = false

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.E then
        enabled = not enabled
        print("Circle movement:", enabled and "ON" or "OFF")
        
        if enabled then
            task.spawn(function()
                while enabled do
                    -- W
                    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.W, false, game)
                    task.wait(0.05)
                    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.W, false, game)

                    -- A
                    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.A, false, game)
                    task.wait(0.05)
                    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.A, false, game)

                    -- S
                    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.S, false, game)
                    task.wait(0.05)
                    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.S, false, game)

                    -- D
                    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.D, false, game)
                    task.wait(0.05)
                    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.D, false, game)
                end
            end)
        end
    end
end)
